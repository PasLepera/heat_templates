heat_template_version: 2013-05-23

description: >
  Install a MariaDB database on a vm.
  Change the defaults.  
parameters:
  #---------------------------------------------------------------------
  #                MariaDB Parameters
  #---------------------------------------------------------------------  
  key_name:
    type: string
    description: Name of a KeyPair to enable SSH access to the instance
    default: "key"
  instance_type:
    type: string
    description: >
        Instance type for MariaDB server
        -- maximum resources with"m1.big24.kvm"
    default: "m1.medium.kvm"

  owncloud_network:
    type: string
    description: Network used by the owncloud servers
    default: "network"
  proxy_server:
    type: string
    description: Proxy Server
    default: "http://proxy:3128"
    
  image_id:
    type: string
    description: >
      Name or ID of the image to use for the mariadb server.
    default: "ubuntu16-heat"

  db_name:
    type: string
    description: Database name
    default: db1
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_name must begin with a letter and contain only alphanumeric
          characters
  db_username:
    type: string
    description: The Owncloud database admin account username
    default: user1
    hidden: true
    constraints:
      - length: { min: 1, max: 16 }
        description: db_username must be between 1 and 16 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_username must begin with a letter and contain only alphanumeric
          characters
  db_password:
    type: string
    description: The Owncloud database admin account password
    default: password1
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_password must contain only alphanumeric characters
  db_root_password:
    type: string
    description: Root password for MySQL
    default: password2
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_root_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_root_password must contain only alphanumeric characters

resources:
  #---------------------------------------------------------------------
  #                MariaDB Server
  #---------------------------------------------------------------------  
  mysql_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      networks: [{network: {get_param: owncloud_network}}]
      user_data_format: SOFTWARE_CONFIG

  #---------------------------------------------------------------------
  #                MariaDB Software Config
  #---------------------------------------------------------------------  
  config_mysql:
    depends_on: mysql_instance
    type: OS::Heat::SoftwareConfig
    properties:
      inputs:
      - name: db_rootpassword
      - name: db_name
      - name: db_user
      - name: db_password
      - name: proxy_server
      - name: server_ip
      group: script
      config: |
        #!/bin/bash -v
        # Setup Proxy
        export http_proxy=$proxy_server
        export https_proxy=$proxy_server
        # Sudo commands to install mariadb server      
        sudo -E apt-get update -y
        sudo -E DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade
        sudo -E apt-get install mariadb-server -y
        # Modify /etc/hosts for name 
        echo $server_ip $HOSTNAME | sudo tee --append /etc/hosts
        # Listen on every network interface
        sudo sed -i 's/127.0.0.1/0.0.0.0/' /etc/mysql/mariadb.conf.d/50-server.cnf
        sudo -E systemctl start mysql
        # Make sure that NOBODY can access the server without a password
        #mysql -e "UPDATE mysql.user SET Password = PASSWORD('CHANGEME') WHERE User = 'root'"
        # Kill the anonymous users
        mysql -e "DROP USER ''@'localhost'"
        # Because our hostname varies we'll use some Bash magic here.
        mysql -e "DROP USER ''@'$(hostname)'"
        # Kill off the demo database
        mysql -e "DROP DATABASE test"
        # Disallow remote login for root 
        #mysql -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')"
        # Make our changes take effect            
        mysql -e "FLUSH PRIVILEGES"
        # Setup MySQL root password and create a user
        mysqladmin -u root password $db_rootpassword
        cat << EOF | mysql -u root --password=$db_rootpassword
        CREATE DATABASE $db_name;
        GRANT ALL PRIVILEGES ON $db_name.* TO "$db_user"@"%" IDENTIFIED BY "$db_password";
        FLUSH PRIVILEGES;
        EXIT
        EOF
        sudo -E systemctl restart mysql
       
  #---------------------------------------------------------------------
  #                MariaDB Software Deployment
  #---------------------------------------------------------------------  
  deployment_config_mysql:
    depends_on: mysql_instance
    type: OS::Heat::SoftwareDeployment
    properties:
      input_values:
        db_rootpassword: { get_param: db_root_password }
        db_name: { get_param: db_name }
        db_user: { get_param: db_username }
        db_password: { get_param: db_password }
        proxy_server: { get_param: proxy_server }
        server_ip: { get_attr: [mysql_instance, first_address] }   
      config:
        get_resource: config_mysql
      server:
        get_resource: mysql_instance

outputs:
  #---------------------------------------------------------------------
  #                MariaDB Outputs
  #---------------------------------------------------------------------  
  DatabaseURL:
    description: URL for MariaDB
    value:
      str_replace:
        template: host:3306
        params:
          host: { get_attr: [mysql_instance, first_address] }
  deployment_config_mysql_result:
    value:
      get_attr: [deployment_config_mysql, result]
  deployment_config_mysql_status_code:
    value:
      get_attr: [deployment_config_mysql, deploy_status_code]          
  deployment_config_mysql_stdout:
    description: Standard output captured from the configuration execution.
    value:
      get_attr: [deployment_config_mysql, deploy_stdout]
  deployment_config_mysql_stderr:
    description: Standard error captured from the configuration execution.
    value:
      get_attr: [deployment_config_mysql, deploy_stderr]  
